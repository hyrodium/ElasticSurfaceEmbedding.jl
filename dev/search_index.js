var documenterSearchIndex = {"docs":
[{"location":"gallery/#Weaving-examples","page":"Gallery","title":"Weaving examples","text":"","category":"section"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"<div class=\"list-card-section\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"(Image: list-card-cover-image)","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"Paraboloid","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"Weaving a simple curved surface with positive curvature.","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"(Image: list-card-cover-image)","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"Hyperbolic paraboloid","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"Weaving a simple curved surface with negative curvature.","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"(Image: list-card-cover-image)","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"Helicatenoid","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"Weaving a transformable curved surface from catenoid to helicoid.","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"<div class=\"list-card\">\n<table>\n  <td valign=\"bottom\"><div class=\"list-card-cover\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"(Image: list-card-cover-image)","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"  </div></td>\n  <td><div class=\"list-card-text\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"Stereographic projection","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"</div>\n    <div class=\"list-card-description\">","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"A point light illuminates the grid points on the ground.","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"    </div>\n  </td>\n</tbody></table>\n</div>","category":"page"},{"location":"gallery/","page":"Gallery","title":"Gallery","text":"</div>","category":"page"},{"location":"craft/#craft","page":"Craft","title":"Craft","text":"","category":"section"},{"location":"craft/#Question:-How-can-I-make-the-model?","page":"Craft","title":"Question: How can I make the model?","text":"","category":"section"},{"location":"craft/","page":"Craft","title":"Craft","text":"You can:","category":"page"},{"location":"craft/","page":"Craft","title":"Craft","text":"Download a paraboloid example or a hyperbolic paraboloid example from my paper on arXiv, and cut by scissors.\nIt would be hard, but not impossible.\nDownload a paraboloid example or a hyperbolic paraboloid example from my paper on arXiv, and cut by laser cutting machine.\nI'm using Beambox by FLUX.inc.\nCompute the shape of paper strip, instead of downloading the paraboloid.\nThis needs setup for Julia environment.\nBuy already cut pieces of paper at Booth (In preparation).\nShips from Japan.","category":"page"},{"location":"craft/#Images-during-the-making-process","page":"Craft","title":"Images during the making process","text":"","category":"section"},{"location":"craft/","page":"Craft","title":"Craft","text":"(Image: ) (Image: )","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/#Hyperbolic-paraboloid","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"","category":"section"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"Weaving a simple curved surface with negative curvature.","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"(Image: )","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/#Load-packages","page":"Hyperbolic paraboloid","title":"Load packages","text":"","category":"section"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"using IntervalSets\nusing BasicBSpline\nusing StaticArrays\nusing ElasticSurfaceEmbedding","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/#Define-the-shape-of-the-surface","page":"Hyperbolic paraboloid","title":"Define the shape of the surface","text":"","category":"section"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"ElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(u¬π, u¬≤, u¬π^2-u¬≤^2)\nn = 10\nD(i,n) = (-1.0..1.0, (i-1)/n..i/n)","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/#Compute-the-shape-of-the-embeddings","page":"Hyperbolic paraboloid","title":"Compute the shape of the embeddings","text":"","category":"section"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"steptree = ElasticSurfaceEmbedding.StepTree()\nfor i in 1:10\n    initial_state!(steptree, D(i,n), n‚ÇÅ=33)\n    newton_onestep!(steptree, fixingmethod=:fix3points)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    refinement!(steptree, p‚Çä=(0,1), k‚Çä=(EmptyKnotVector(), KnotVector([i/n-1/2n])))\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    pin!(steptree)\nend","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/#Export-the-shapes-in-SVG-format","page":"Hyperbolic paraboloid","title":"Export the shapes in SVG format","text":"","category":"section"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"export_pinned_steps(\"hyperbolic_paraboloid\", steptree, xlims=(-2,2), ylims=(-2,2), unitlength=(100,\"mm\"), mesh=(20,1))","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"","category":"page"},{"location":"gallery/weaving_examples/hyperbolic_paraboloid/","page":"Hyperbolic paraboloid","title":"Hyperbolic paraboloid","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"gallery/weaving_examples/paraboloid/#Paraboloid","page":"Paraboloid","title":"Paraboloid","text":"","category":"section"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"Weaving a simple curved surface with positive curvature.","category":"page"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"(Image: )","category":"page"},{"location":"gallery/weaving_examples/paraboloid/#Load-packages","page":"Paraboloid","title":"Load packages","text":"","category":"section"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"using IntervalSets\nusing BasicBSpline\nusing StaticArrays\nusing ElasticSurfaceEmbedding","category":"page"},{"location":"gallery/weaving_examples/paraboloid/#Define-the-shape-of-the-surface","page":"Paraboloid","title":"Define the shape of the surface","text":"","category":"section"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"ElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(u¬π, u¬≤, u¬π^2+u¬≤^2)\nn = 10\nD(i,n) = (-1.0..1.0, (i-1)/n..i/n)","category":"page"},{"location":"gallery/weaving_examples/paraboloid/#Compute-the-shape-of-the-embeddings","page":"Paraboloid","title":"Compute the shape of the embeddings","text":"","category":"section"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"steptree = ElasticSurfaceEmbedding.StepTree()\nfor i in 1:10\n    initial_state!(steptree, D(i,n), n‚ÇÅ=33)\n    newton_onestep!(steptree, fixingmethod=:fix3points)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    refinement!(steptree, p‚Çä=(0,1), k‚Çä=(EmptyKnotVector(), KnotVector([i/n-1/2n])))\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    pin!(steptree)\nend","category":"page"},{"location":"gallery/weaving_examples/paraboloid/#Export-the-shapes-in-SVG-format","page":"Paraboloid","title":"Export the shapes in SVG format","text":"","category":"section"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"export_pinned_steps(\"paraboloid\", steptree, xlims=(-2,2), ylims=(-2,2), unitlength=(100,\"mm\"), mesh=(20,1))","category":"page"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"","category":"page"},{"location":"gallery/weaving_examples/paraboloid/","page":"Paraboloid","title":"Paraboloid","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Stereographic-projection","page":"Stereographic projection","title":"Stereographic projection","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"A point light illuminates the grid points on the ground.","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"(Image: )","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Load-packages","page":"Stereographic projection","title":"Load packages","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"using Luxor\nusing IntervalSets\nusing BasicBSpline\nusing BasicBSplineFitting\nusing StaticArrays\nusing ElasticSurfaceEmbedding","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Compute-the-embedding-shapes","page":"Stereographic projection","title":"Compute the embedding shapes","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/#Shape-definition","page":"Stereographic projection","title":"Shape definition","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"ElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(2*u¬π/(1+u¬π^2+u¬≤^2), 2*u¬≤/(1+u¬π^2+u¬≤^2), (-1+u¬π^2+u¬≤^2)/(1+u¬π^2+u¬≤^2))\nn = 10\nD(i,n) = (-2.0..2.0, 2(i-1)/n..2i/n)","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Strain-estimation","page":"Stereographic projection","title":"Strain estimation","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"show_strain(D(1,n))","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Main-computation","page":"Stereographic projection","title":"Main computation","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"steptree = StepTree()\nfor i in 1:10\n    initial_state!(steptree, D(i,n), n‚ÇÅ=25)\n    newton_onestep!(steptree, fixingmethod=:fix3points)\n    newton_onestep!(steptree)\n    refinement!(steptree, p‚Çä=(0,1), k‚Çä=(EmptyKnotVector(),KnotVector([(i-1/2)/5])))\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    pin!(steptree)\nend","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Helper-functions-to-export-svg-images","page":"Stereographic projection","title":"Helper functions to export svg images","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"function create_bezierpath(C::BSplineManifold{1,(3,),Point})\n    P = bsplinespaces(C)[1]\n    k = knotvector(P)\n    k‚Ä≤ = 3*unique(k) + k[[1,end]]\n    P‚Ä≤ = BSplineSpace{3}(k‚Ä≤)\n    C‚Ä≤ = refinement(C,P‚Ä≤)\n    a‚Ä≤ = controlpoints(C‚Ä≤)\n    n‚Ä≤ = dim(P‚Ä≤)\n    m = (n‚Ä≤-1) √∑ 3\n    bezierpath = BezierPath([BezierPathSegment(a‚Ä≤[3i-2], a‚Ä≤[3i-1], a‚Ä≤[3i], a‚Ä≤[3i+1]) for i in 1:m])\n    return bezierpath\nend\nfunction svector2point(M::BSplineManifold, unitlength)\n    P = bsplinespaces(M)\n    a = controlpoints(M)\n    a‚Ä≤ = [Point(p[1]*unitlength[1], -p[2]*unitlength[1]) for p in a]\n    M‚Ä≤ = BSplineManifold(a‚Ä≤, P)\n    return M‚Ä≤\nend","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Settings-for-export","page":"Stereographic projection","title":"Settings for export","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"xlims=(-3,3)\nylims=(-1,1)\nunitlength = (200, \"mm\")\nr = 0.025","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#Export-all-embedded-shapes-with-arcs","page":"Stereographic projection","title":"Export all embedded shapes with arcs","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"mkpath(\"stereographicprojection\")\nfor i in 1:10\n    M = svector2point(steptree.steps[6i].manifold, unitlength)\n    D¬π = domain(bsplinespaces(M)[1])\n    D¬≤ = domain(bsplinespaces(M)[2])\n    u¬πs = range(extrema(D¬π)...,21)[2:end-1]\n    u¬≤‚Çã = minimum(D¬≤)\n    u¬≤‚Çä = maximum(D¬≤)\n\n    width = (xlims[2] - xlims[1]) * unitlength[1]\n    height = (ylims[2] - ylims[1]) * unitlength[1]\n\n    filepath = joinpath(\"stereographicprojection\", \"embedding-$(i).svg\")\n    Drawing(width, height, filepath)\n    origin()\n    background(\"white\")\n    sethue(\"red\")\n\n    C = M(:,u¬≤‚Çã)\n    path = create_bezierpath(C)\n    drawbezierpath(path, :stroke)\n    C = M(:,u¬≤‚Çä)\n    path = create_bezierpath(C)\n    drawbezierpath(path, :stroke)\n    C = M(2,:)\n    path = create_bezierpath(C)\n    drawbezierpath(path, :stroke)\n    C = M(-2,:)\n    path = create_bezierpath(C)\n    drawbezierpath(path, :stroke)\n\n    for u¬π in u¬πs\n        k = KnotVector([0,0,0,0,0.25,0.5,0.75,1,1,1,1])\n        P = BSplineSpace{3}(k)\n        dim(P)\n\n        a = fittingcontrolpoints(t -> M(u¬π+r*cospi(t), u¬≤‚Çã+r*sinpi(t)), P)\n        C = BSplineManifold(a,P)\n        path = create_bezierpath(C)\n        drawbezierpath(path, :stroke)\n\n        a = fittingcontrolpoints(t -> M(u¬π+r*cospi(t), u¬≤‚Çä-r*sinpi(t)), P)\n        C = BSplineManifold(a,P)\n        path = create_bezierpath(C)\n        drawbezierpath(path, :stroke)\n    end\n\n    finish()\n    preview()\n\n    script = read(filepath, String)\n    lines = split(script, \"\\n\")\n    lines[2] = replace(lines[2],\"pt\\\"\"=>\"mm\\\"\")\n    write(filepath, join(lines,\"\\n\"))\nend","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"The output files will be saved as embedding-$(i).svg. By modifying these files, we can place all of the shapes in yatsugiri-size (ÂÖ´„ÉÑÂàá, approximately 270√ó390 mm) paper like this:","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"(Image: )","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"Cutting and weaving these shape will result the sphere in the top image. Please check the following references for more information.","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/#References","page":"Stereographic projection","title":"References","text":"","category":"section"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"Á¥ôÂ∑•‰Ωú„ÅßÁ´ã‰ΩìÂ∞ÑÂΩ±„Çí„Å§„Åè„Å£„ÅüË©±\nÁ´ã‰ΩìÂ∞ÑÂΩ±Ë£Ω‰Ωú„Ç≠„ÉÉ„Éà\nStereographic projection weaving kit\nFurther adventures in stereographic projection","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"","category":"page"},{"location":"gallery/weaving_examples/stereographicprojection/","page":"Stereographic projection","title":"Stereographic projection","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"run-julia/#numerical_computation","page":"Numerical computation","title":"Numerical computation","text":"","category":"section"},{"location":"run-julia/#Installation","page":"Numerical computation","title":"Installation","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"On Julia's package mode, run the following commands.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"pkg> add IntervalSets\npkg> add StaticArrays\npkg> add BasicBSpline\npkg> add https://github.com/hyrodium/BasicBSplineExporter.jl\npkg> add https://github.com/hyrodium/ElasticSurfaceEmbedding.jl","category":"page"},{"location":"run-julia/#Overview-of-our-method","page":"Numerical computation","title":"Overview of our method","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"Our theoretical framework is based on:","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"Mathematical model: Nonlinear elasticity on Riemannian manifold\nGeometric representation: B-spline manifold\nNumerical analysis: Galerkin method, Newton-Raphson method","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"The computation process proceeds as shown in the following flowchart (from our paper):","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"(Image: )","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"For more information, read our paper or contact me!","category":"page"},{"location":"run-julia/#Example:-Paraboloid","page":"Numerical computation","title":"Example: Paraboloid","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"Through this section, we treat a paraboloid z=x^2+y^2 as an example.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"(Image: )","category":"page"},{"location":"run-julia/#Load-packages,-and-optional-configuration","page":"Numerical computation","title":"Load packages, and optional configuration","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"Load packages with the following script.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"using IntervalSets\nusing BasicBSpline\nusing StaticArrays\nusing ElasticSurfaceEmbedding","category":"page"},{"location":"run-julia/#Define-the-shape-of-surface","page":"Numerical computation","title":"Define the shape of surface","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"ElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(u¬π, u¬≤, u¬π^2+u¬≤^2)","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"beginaligned\nbmp_0(u^1 u^2)\n= beginpmatrix\nu^1 \nu^2 \n(u^1)^2 + (u^2)^2\nendpmatrix \nD\n= -11times-11\nendaligned","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"info: Direction of the surface\nIn the next step, we will split the surface into elongated strips. The domain of each strip should be rectangular, and the longer direction is u¬π, and the shorter direction is u¬≤. The paraboloid has four‚Äêfold symmetry, so we don't have to take care of it.","category":"page"},{"location":"run-julia/#Split-the-surface-into-strips","page":"Numerical computation","title":"Split the surface into strips","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"The domain D will be split into D_i.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"beginaligned\nD_i\n= -11timesleftfraci-110fraci10right  (i=1dots10)\nendaligned","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"(Image: )","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"In julia script, just define a domain of the strip with function D(i,n).","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"n = 10\nD(i,n) = (-1.0..1.0, (i-1)/n..i/n)","category":"page"},{"location":"run-julia/#Check-the-strain-prediction","page":"Numerical computation","title":"Check the strain prediction","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"Before computing the embedding numerically, we can predict the strain with Strain Approximation Formula:","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"beginaligned\nE_11^langle 0rangleapproxfrac12K_0B^2left(r^2-frac13right)\nendaligned","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"show_strain","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.show_strain","page":"Numerical computation","title":"ElasticSurfaceEmbedding.show_strain","text":"show_strain(D; index=0)\n\nShow the predicted maximum strain and, if possible, also the computed strain with the given index.\n\n\n\n\n\n","category":"function"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"for i in 1:n\n    show_strain(D(i,n))\nend","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"tip: Allowable strain\nPositive number means tension, and negative number means compression. Empirically, it is better if the absolute value of strain is smaller than 001 (=1).","category":"page"},{"location":"run-julia/#Initial-state","page":"Numerical computation","title":"Initial state","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"If you finished checking the strain prediction, the next step is determination of the initial state.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"initial_state\ninitial_state!","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.initial_state","page":"Numerical computation","title":"ElasticSurfaceEmbedding.initial_state","text":"initial_state(D; n‚ÇÅ = 15)\n\nCompute the initial state, by solving a ODE of center curve.\n\n\n\n\n\n","category":"function"},{"location":"run-julia/#ElasticSurfaceEmbedding.initial_state!","page":"Numerical computation","title":"ElasticSurfaceEmbedding.initial_state!","text":"initial_state!(steptree, D; n‚ÇÅ = 15)\n\nCompute the initial state, by solving a ODE of center curve.\n\n\n\n\n\n","category":"function"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"From this section, the computing is done for each piece of the surface. First, let's calculate for i=1.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"i = 1","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"As a first step, let's compute the initial state.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"steptree = initial_state(D(i,n), n‚ÇÅ=19)","category":"page"},{"location":"run-julia/#Newton-Raphson-method-iteration","page":"Numerical computation","title":"Newton-Raphson method iteration","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"newton_onestep!(steptree, fixingmethod=:fix3points)\nnewton_onestep!(steptree)","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"You can choose the fixing method from below:","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":":default (default)\n:fix3points","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"newton_onestep!","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.newton_onestep!","page":"Numerical computation","title":"ElasticSurfaceEmbedding.newton_onestep!","text":"newton_onestep(steptree, parent::Int=0; fixingmethod=:default)\n\nCompute one step of Newton-Raphson method\n\n\n\n\n\n","category":"function"},{"location":"run-julia/#Refinement-of-B-spline-manifold","page":"Numerical computation","title":"Refinement of B-spline manifold","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"refinement!","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.refinement!","page":"Numerical computation","title":"ElasticSurfaceEmbedding.refinement!","text":"refinement!(steptree; p‚Çä::Tuple{Int,Int}=(0, 0), k‚Çä::Tuple{AbstractKnotVector,AbstractKnotVector}=(EmptyKnotVector(),EmptyKnotVector()), parent::Int=0)\n\nCompute a refinement of the B-spline manifold\n\n\n\n\n\n","category":"function"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"refinement!(steptree, p‚Çä=(0,1), k‚Çä=(EmptyKnotVector(),KnotVector([(i-1/2)/10])))","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"The knotvector to be inserted in refinement! can be suggested by show_knotvector function.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"show_knotvector","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.show_knotvector","page":"Numerical computation","title":"ElasticSurfaceEmbedding.show_knotvector","text":"show_knotvector(; index=0)\n\nShow current knotvector and suggestions for knot insertions (with given index).\n\n\n\n\n\n","category":"function"},{"location":"run-julia/#Pin-the-step","page":"Numerical computation","title":"Pin the step","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"If you finished computing for the strip, it's time to pin the step. This pinüìå will be used for the the final export step.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"pin!","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.pin!","page":"Numerical computation","title":"ElasticSurfaceEmbedding.pin!","text":"pin(steptree, parent::Int = 0)\n\nAdd a pin üìå for the given index\n\n\n\n\n\n","category":"function"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"pin!(steptree)","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"If you add a pin mistakenly, you can remove the pin with unpin! function.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"unpin!","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.unpin!","page":"Numerical computation","title":"ElasticSurfaceEmbedding.unpin!","text":"unpin(steptree, index::Integer)\n\nRemeve the pin üìå with the given index\n\n\n\n\n\n","category":"function"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"unpin!(steptree, 4)","category":"page"},{"location":"run-julia/#Compute-more","page":"Numerical computation","title":"Compute more","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"newton_onestep!(steptree)\nnewton_onestep!(steptree)\npin!(steptree)\n\ni = 2\ninitial_state!(steptree, D(i,n), n‚ÇÅ=19)\nnewton_onestep!(steptree, fixingmethod=:fix3points)\nnewton_onestep!(steptree)\nrefinement!(steptree, p‚Çä=(0,1), k‚Çä=(EmptyKnotVector(),KnotVector([(i-1/2)/10])))\nnewton_onestep!(steptree)\nnewton_onestep!(steptree)\npin!(steptree)","category":"page"},{"location":"run-julia/#Export-all-pinned-shapes","page":"Numerical computation","title":"Export all pinned shapes","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"This is the final step of the computational process.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"export_pinned_steps","category":"page"},{"location":"run-julia/#ElasticSurfaceEmbedding.export_pinned_steps","page":"Numerical computation","title":"ElasticSurfaceEmbedding.export_pinned_steps","text":"export_pinned_steps(; unitlength = (10, \"mm\"), cutout = (0.1, 5), mesh::Int = 60)\n\nExport all pinned steps for final output\n\n\n\n\n\n","category":"function"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"export_pinned_steps(\".\", steptree, unitlength=(50, \"mm\"), mesh=(20,1), xlims=(-2,2), ylims=(-0.3,0.3))","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"This will create SVG files in ./pinned.","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"pinned/pinned-6.svg (Image: )","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"pinned/pinned-12.svg (Image: )","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"The all outputs for i in 1:10 will be like this: (Image: )","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"You can edit these files, and craft them into curved surface shape.","category":"page"},{"location":"run-julia/#Other-examples","page":"Numerical computation","title":"Other examples","text":"","category":"section"},{"location":"run-julia/#Catenoid","page":"Numerical computation","title":"Catenoid","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"(Image: )","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"## Load packages\nusing IntervalSets\nusing BasicBSpline\nusing StaticArrays\nusing ElasticSurfaceEmbedding\n\n## Set parametric mapping (x-direction)\nElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(cos(u¬≤)*cosh(u¬π),sin(u¬≤)*cosh(u¬π),u¬π)\nn=9\nDx(n) = (-œÄ/2..œÄ/2,-œÄ/(4n)..œÄ/(4n))\n\n## Check the maximum strain\nshow_strain(Dx(n))\n\n## Numerical computing\ninitial_state(Dx(n), n‚ÇÅ=19)\nnewton_onestep(fixingmethod=:fix3points)\nnewton_onestep()\nnewton_onestep()\nrefinement!(p‚Çä=(0,1),k‚Çä=(EmptyKnotVector(),KnotVector(0)))\nnewton_onestep()\nnewton_onestep()\nnewton_onestep()\nadd_pin(tag=\"$name\")\nexport_pinned_steps(unitlength=(30,\"mm\"))\n\n\n## Set parametric mapping (y-direction)\nElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(cos(u¬π)*cosh(u¬≤),sin(u¬π)*cosh(u¬≤),u¬≤)\nn=9\nDy(i,n) = (-œÄ..œÄ,(i-1)*œÄ/(2n)..(i)*œÄ/(2n))\n\n## Check the maximum strain\nfor i in 1:9\n    show_strain(Dy(i,n))\nend\n\n## Numerical computing\nfor i in 1:9\n    initial_state(Dy(i,n), n‚ÇÅ=19)\n    newton_onestep(fixingmethod=:fix3points)\n    newton_onestep()\n    newton_onestep()\n    refinement!(p‚Çä=(0,1),k‚Çä=(EmptyKnotVector(),KnotVector((i-1/2)*œÄ/(2n))))\n    newton_onestep()\n    newton_onestep()\n    newton_onestep()\n    add_pin(tag=\"$name-$i\")\nend\nexport_pinned_steps(unitlength=(30,\"mm\"))","category":"page"},{"location":"run-julia/#Helicoid","page":"Numerical computation","title":"Helicoid","text":"","category":"section"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"(Image: )","category":"page"},{"location":"run-julia/","page":"Numerical computation","title":"Numerical computation","text":"## Load packages\nusing IntervalSets\nusing BasicBSpline\nusing StaticArrays\nusing ElasticSurfaceEmbedding\n\n## Set parametric mapping (x-direction)\nElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(cos(u¬≤)*sinh(u¬π),sin(u¬≤)*sinh(u¬π),u¬≤)\nn=9\nDx(n) = (-œÄ/2..œÄ/2,-œÄ/(4n)..œÄ/(4n))\n\nname = \"Helicoid-x\"\nsettings(name,canvas=(8,8),mesh=(18,1),unit=200,colorbarsize=0.3)\n\n## Check the maximum strain\nshow_strain(Dx(n))\n\n## Numerical computing\ninitial_state(Dx(n), n‚ÇÅ=19)\nnewton_onestep(fixingmethod=:fix3points)\nnewton_onestep()\nnewton_onestep()\nrefinement!(p‚Çä=(0,1),k‚Çä=(EmptyKnotVector(),KnotVector(0)))\nnewton_onestep()\nnewton_onestep()\nnewton_onestep()\nadd_pin(tag=\"$name\")\nexport_pinned_steps(unitlength=(30,\"mm\"))\n\n\n## Set parametric mapping (y-direction)\nElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(cos(u¬π)*sinh(u¬≤),sin(u¬π)*sinh(u¬≤),u¬π)\nn=9\nDy(i,n) = (-œÄ..œÄ,(i-1)*œÄ/(2n)..(i)*œÄ/(2n))\n\nname = \"Helicoid-y\"\nsettings(name,canvas=(8,8),mesh=(36,1),unit=200,colorbarsize=0.3)\n\n## Check the maximum strain\nfor i in 1:9\n    show_strain(Dy(i,n))\nend\n\n## Numerical computing\nfor i in 1:9\n    initial_state(Dy(i,n), n‚ÇÅ=19)\n    newton_onestep(fixingmethod=:fix3points)\n    newton_onestep()\n    newton_onestep()\n    refinement!(p‚Çä=(0,1),k‚Çä=(EmptyKnotVector(),KnotVector((i-1/2)*œÄ/(2n))))\n    newton_onestep()\n    newton_onestep()\n    newton_onestep()\n    add_pin(tag=\"$name-$i\")\nend\nexport_pinned_steps(unitlength=(30,\"mm\"))","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/#Helicatenoid","page":"Helicatenoid","title":"Helicatenoid","text":"","category":"section"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"(Image: Source code) (Image: notebook)","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"Weaving a transformable curved surface from catenoid to helicoid.","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"<div class=\"videoWrapper\">\n  <!-- Copy & Pasted from YouTube -->\n  <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Gp6XkPLCw7s\" title=\"YouTube video player\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\" allowfullscreen></iframe>\n</div>","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/#Load-packages","page":"Helicatenoid","title":"Load packages","text":"","category":"section"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"using IntervalSets\nusing BasicBSpline\nusing StaticArrays\nusing ElasticSurfaceEmbedding","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/#Define-the-shape-of-the-surface-(non-periodic-direction)","page":"Helicatenoid","title":"Define the shape of the surface (non-periodic direction)","text":"","category":"section"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"ElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(cos(u¬≤)*cosh(u¬π),sin(u¬≤)*cosh(u¬π),u¬π)\nn=9\nDa(n) = (-œÄ/2..œÄ/2,-œÄ/(4n)..œÄ/(4n))","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/#Compute-the-shape-of-the-embeddings","page":"Helicatenoid","title":"Compute the shape of the embeddings","text":"","category":"section"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"show_strain(Da(n))\n\nsteptree = initial_state(Da(n), n‚ÇÅ=33)\nnewton_onestep!(steptree, fixingmethod=:fix3points)\nnewton_onestep!(steptree)\nnewton_onestep!(steptree)\nnewton_onestep!(steptree)\nnewton_onestep!(steptree)\nrefinement!(steptree, p‚Çä=(0,1), k‚Çä=(EmptyKnotVector(), KnotVector([0])))\nnewton_onestep!(steptree)\nnewton_onestep!(steptree)\npin!(steptree)","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/#Export-the-shape-in-SVG-format","page":"Helicatenoid","title":"Export the shape in SVG format","text":"","category":"section"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"export_pinned_steps(\"helicatenoid-a\", steptree, unitlength=(40,\"mm\"), mesh=(18,1))","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"(Image: )","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/#Define-the-shape-of-the-surface-(periodic-direction)","page":"Helicatenoid","title":"Define the shape of the surface (periodic direction)","text":"","category":"section"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"ElasticSurfaceEmbedding.ùíë‚Çç‚ÇÄ‚Çé(u¬π,u¬≤) = SVector(cos(u¬π)*cosh(u¬≤),sin(u¬π)*cosh(u¬≤),u¬≤)\nDb(i,n) = (-œÄ..œÄ,(i-1)*œÄ/(2n)..(i)*œÄ/(2n))\n\n# Check the maximum strain\nfor i in 1:9\n    show_strain(Db(i,n))\nend\n\n# Numerical computing\nsteptree = StepTree()\nfor i in 1:9\n    initial_state!(steptree, Db(i,n), n‚ÇÅ=33)\n    newton_onestep!(steptree, fixingmethod=:fix3points)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    refinement!(steptree, p‚Çä=(0,1), k‚Çä=(EmptyKnotVector(),KnotVector([(i-1/2)*œÄ/(2n)])))\n    newton_onestep!(steptree)\n    newton_onestep!(steptree)\n    pin!(steptree)\nend","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/#Export-the-shapes-in-SVG-format","page":"Helicatenoid","title":"Export the shapes in SVG format","text":"","category":"section"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"export_pinned_steps(\"helicatenoid-b\", steptree, unitlength=(40,\"mm\"), mesh=(36,1))","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"(Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: ) (Image: )","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"","category":"page"},{"location":"gallery/weaving_examples/helicatenoid/","page":"Helicatenoid","title":"Helicatenoid","text":"This page was generated using DemoCards.jl and Literate.jl.","category":"page"},{"location":"#Elastic-Surface-Embedding","page":"Home","title":"Elastic Surface Embedding","text":"","category":"section"},{"location":"#TL;DR","page":"Home","title":"TL;DR","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can make a holdable smooth surface model with this repository.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"","page":"Home","title":"Home","text":"The main part of this project is how to determine a planer shape from a strip on curved surface. In mathematics, this mapping is called \"embedding\". We determined the embedding by minimizing its elastic strain energy. This is the meaning of \"Elastic Surface Embedding\".","category":"page"},{"location":"#Overview:-How-to-make-a-surface-model","page":"Home","title":"Overview: How to make a surface model","text":"","category":"section"},{"location":"#step-1-:-Define-a-shape-of-surface-(and-split-into-strips)","page":"Home","title":"step 1 : Define a shape of surface (and split into strips)","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The definition must consists of parametric mapping and its domain. For example, a paraboloid can be parametrized as below.","category":"page"},{"location":"","page":"Home","title":"Home","text":"beginaligned\nbmp_0(u^1 u^2)\n= beginpmatrix\nu^1 \nu^2 \n(u^1)^2 + (u^2)^2\nendpmatrix \nD\n= -11times-11\nendaligned","category":"page"},{"location":"","page":"Home","title":"Home","text":"The domain D will be split into D_i.","category":"page"},{"location":"","page":"Home","title":"Home","text":"beginaligned\nD_i\n= -11timesleftfraci-110fraci10right  (i=1dots10)\nendaligned","category":"page"},{"location":"#step-2-:-Numerical-analysis","page":"Home","title":"step 2 : Numerical analysis","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the main part. Split the surface into pieces, and compute the Eucledian embedding. For more information, read numerical computation section. The image below is a result for the domain D_1.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"#step-3-:-Edit-on-vector-graphics-editor","page":"Home","title":"step 3 : Edit on vector graphics editor","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"The output files are SVG format. After editing the svg files, you can print the graphics or cut papers by laser cutting machine.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"#step-4-:-Craft-a-paper-model","page":"Home","title":"step 4 : Craft a paper model","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"This is the final step. Cut papers into strips, and weave them into surface.","category":"page"},{"location":"","page":"Home","title":"Home","text":"(Image: )","category":"page"},{"location":"#Directions:-If-you-like..","page":"Home","title":"Directions: If you like..","text":"","category":"section"},{"location":"#..making-crafts","page":"Home","title":"..making crafts ‚úÇÔ∏è","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<div style=\"display:table;  width:100%;\">\n    <div style=\"display:table-cell; width:160px;\">\n        <img src=\"img/craft_thumbnail.png\">\n    </div>\n    <div style=\"display:table-cell; vertical-align:middle;\">\n        Download and print a paraboloid example or a hyperbolic paraboloid example from <a href=\"https://arxiv.org/abs/2211.06372\">my paper on arXiv</a>, and <a href=\"../craft\">make your own surface model</a>.\n        Laser cutting machine is useful, but it's not necessary.\n    </div>\n</div>","category":"page"},{"location":"#..computing","page":"Home","title":"..computing üíª","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<div style=\"display:table;  width:100%;\">\n    <div style=\"display:table-cell; width:160px;\">\n        <img src=\"img/juliawolfram_thumbnail.png\">\n    </div>\n    <div style=\"display:table-cell; vertical-align:middle;\">\n        Clone this repository, and run <a href=\"../run-julia\">the Julia script</a> or <a href=\"../run-wolfram\">the Wolfram script</a>!\n        Any issues and pull requests are welcomed.\n    </div>\n</div>","category":"page"},{"location":"#..mathematics-or-physics","page":"Home","title":"..mathematics or physics üåê","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<div style=\"display:table;  width:100%;\">\n    <div style=\"display:table-cell; width:160px;\">\n        <img src=\"img/math_thumbnail.png\">\n    </div>\n    <div style=\"display:table-cell; vertical-align:middle;\">\n        Read <a href=\"https://arxiv.org/abs/2211.06372\">my paper on arXiv</a>. Here's our theoretical framework:\n        <ul>\n            <li>Mathematical model: <a href=\"https://www.sciencedirect.com/topics/engineering/geometric-nonlinearity\">Nonlinear elasticity</a> on <a href=\"https://en.m.wikipedia.org/wiki/Riemannian_manifold\">Riemannian manifold</a></li>\n            <li>Geometric representation: <a href=\"https://en.wikipedia.org/wiki/Non-uniform_rational_B-spline\">B-spline manifold</a></li>\n            <li>Numerical analysis: <a href=\"https://en.wikipedia.org/wiki/Galerkin_method\">Galerkin method</a>, <a href=\"https://en.wikipedia.org/wiki/Newton%27s_method\">Newton-Raphson method</a></li>\n        </ul>\n    </div>\n</div>","category":"page"},{"location":"#..me!","page":"Home","title":"..me! üê¢","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"<div style=\"display:table;  width:100%;\">\n    <div style=\"display:table-cell; width:160px;\">\n        <img src=\"img/me_thumbnail.jpg\">\n    </div>\n    <div style=\"display:table-cell; vertical-align:middle;\">\n        <ul>\n            <li>Follow <a href=\"https://twitter.com/Hyrodium\">my twitter account</a>!</li>\n            <li>Visit <a href=\"https://hyrodium.github.io/\">my website</a>!</li>\n            <li>Read <a href=\"https://arxiv.org/abs/2211.06372\">my paper on arXiv</a>!</li>\n            <li>Give star to <a href=\"https://github.com/hyrodium/ElasticSurfaceEmbedding.jl\">this repository</a>!</li>\n        </ul>\n    </div>\n</div>","category":"page"},{"location":"run-wolfram/#symbolic_computation","page":"Symbolic computation","title":"Symbolic computation","text":"","category":"section"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"There are two .ipynb files in ElasticSurfaceEmbedding-wolfram repository.","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"MainTheorem.ipynb\nAnalyticSolution.ipynb","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"These files are used for some symbolic computation, so you can skip this part if you just want to make a surface model. The following contents describes the rule of these files.","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"Please install the following software in your environment.","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"Wolfram Engine\nWolfram Language kernel for Jupyter notebooks","category":"page"},{"location":"run-wolfram/#Main-theorems","page":"Symbolic computation","title":"Main theorems","text":"","category":"section"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"There are two theorems in our paper.","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"info: Theorem.  Approximation of Strain\nIn the range of sufficiently small breadth B of the curved piece, the piece is in an approximately u^1-directional uniaxial stress state at each point, and the principal strain can be approximated asE^langle 0 rangle_11 approx frac12K_0B^2left(r^2-frac13right) quad E^langle 0 rangle_22 approx -nu E^langle 0 rangle_11where K_0 is the Gaussian curvature along the center curve C_0 of the reference state M_0, r is a normalized breadth-directional coordinate (1 le r le 1). ","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"(Image: )","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"info: Theorem.  Approximation of Embedding\nLet C_0 be the center curve of M_0, kappa_0 be its geodesic curvature, B be the breadth from center curve of M_0. Similarly, let C_t be the center curve of M_t , kappa_t be its planer curvature. If the breadth B is sufficiently small, then the following approximation is satisfied.g_t_C approx g_0_C quad kappa_t approx kappa_0","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"(Image: )","category":"page"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"The proof is too hard to calculate by hand, so we wrote code to solve this problem by Wolfram language.","category":"page"},{"location":"run-wolfram/#Analytic-solutions","page":"Symbolic computation","title":"Analytic solutions","text":"","category":"section"},{"location":"run-wolfram/","page":"Symbolic computation","title":"Symbolic computation","text":"There are analytic solutions for some specific problem. Please try AnalyticSolution.ipynb for more information.","category":"page"}]
}
